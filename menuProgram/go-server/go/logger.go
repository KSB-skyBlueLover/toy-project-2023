/*
 * Swagger Petstore - OpenAPI 3.0
 *
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * API version: 1.0.11
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"log"
	"net/http"
	"time"
)

func Logger(inner http.Handler, name string) http.Handler {
    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
        start := time.Now()

        inner.ServeHTTP(w, r) // 이거 생략하면 무슨일이 벌어질까? - 비지니스 코드 실행 시키는 부분
                            // 여기서 inner는 밖의 route.handlerfunc 이고 route.handlerfunc 는 일반 함수를 handler객체로 변환한 것
                            // 그렇기 때문에 inner를 실행하지 않으면 비지니스 로직을 버리는 것.
                            // 설정한 경로로는 가지지만 아무런 비지니스 로직이 수행되지 않아 백지화면이 나옴
                            // http의 responsewriter와 request에는 요청과 응답에 대한 정보를 가지고 있으므로.. 
                            // 그냥 저렇게 가져다 사용할 수 있는 것으로 보임
        
        // inner의 servehttp는 결국 business logic을 실행하는 코드가 될것임
        log.Printf(
            "%s %s %s %s",
            r.Method,
            r.RequestURI,
            name,
            time.Since(start),
        )
    })
}
